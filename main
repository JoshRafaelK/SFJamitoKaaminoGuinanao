
import java.util.ArrayList;
import java.util.Scanner;


class Task {
    String name;
    boolean isCompleted;


    public Task(String name) {
        this.name = name;
        this.isCompleted = false;
    }


    @Override
    public String toString() {
        return (isCompleted ? "[Completed] " : "[Incomplete] ") + name;
    }
}

// Switch case functionalities - Ricofel
public class Main {
    private static ArrayList<Task> tasks = new ArrayList<>();
    private static Scanner scanner = new Scanner(System.in);


    public static void main(String[] args) {
        while (true) {
            showMenu();
            int choice = scanner.nextInt();
            scanner.nextLine();  // Consume newline left-over


            switch (choice) {
                case 1:
                    addTask();
                    break;
                case 2:
                    viewAllTasks();
                    break;
                case 3:
                    filterTasks();
                    break;
                case 4:
                    editTask();
                    break;
                case 5:
                    markTaskAsComplete();
                    break;
                case 6:
                    deleteTask();
                    break;
                case 7:
                    System.out.println("Exiting program. Goodbye!");
                    return;
                default:
                    System.out.println("Invalid option. Please try again.");
            }
        }
    }



// Add Show Menu, view task, add task, filter task functionalities.




// Add edit task, complete task, and delete task functionalities.
private static void editTask() {
    System.out.print("Enter the task number to edit: ");
    int taskNumber = scanner.nextInt();
    scanner.nextLine();  // Consume newline left-over


    if (taskNumber < 1 || taskNumber > tasks.size()) {
        System.out.println("Invalid task number.");
    } else {
        System.out.print("Enter the new task name: ");
        String newName = scanner.nextLine();
        tasks.get(taskNumber - 1).name = newName;
        System.out.println("Task updated successfully.");
    }
}


private static void markTaskAsComplete() {
    System.out.print("Enter the task number to mark as complete: ");
    int taskNumber = scanner.nextInt();
    scanner.nextLine();  // Consume newline left-over


    if (taskNumber < 1 || taskNumber > tasks.size()) {
        System.out.println("Invalid task number.");
    } else {
        tasks.get(taskNumber - 1).isCompleted = true;
        System.out.println("Task marked as complete.");
    }
}


private static void deleteTask() {
    System.out.print("Enter the task number to delete: ");
    int taskNumber = scanner.nextInt();
    scanner.nextLine();  // Consume newline left-over


    if (taskNumber < 1 || taskNumber > tasks.size()) {
        System.out.println("Invalid task number.");
    } else {
        tasks.remove(taskNumber - 1);
        System.out.println("Task deleted successfully.");
    }
}
}


